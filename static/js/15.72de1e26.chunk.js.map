{"version":3,"sources":["pages/Players.js","components/Typography/PageTitle.js"],"names":["Players","history","useHistory","useState","page","setPage","players","setPlayers","totalResults","setTotalResults","useEffect","fetch","process","then","response","json","length","slice","catch","err","console","log","message","map","player","i","key","className","onClick","push","id","firstname","lastname","job","two_attempts","two_success","position","tag","Link","to","layout","size","aria-label","aria-hidden","resultsPerPage","label","onChange","p","PageTitle","children"],"mappings":"uMA6GeA,UA5Ff,WACE,IAAIC,EAAUC,uBADG,EAEOC,mBAAS,GAFhB,mBAEVC,EAFU,KAEJC,EAFI,OAGaF,mBAAS,IAHtB,mBAGVG,EAHU,KAGDC,EAHC,OAIuBJ,mBAAS,GAJhC,mBAIVK,EAJU,KAIIC,EAJJ,KA4BjB,OAZAC,qBAAU,WACRC,MAAMC,0CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACP,GACLG,EAAgBH,EAAQU,QACxBT,EAAWD,EAAQW,MAdF,IAcSb,EAAO,GAdhB,GAcqCA,OAEvDc,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAIG,cAEnB,CAAClB,IAGF,oCACE,kBAAC,IAAD,gBAEA,kBAAC,iBAAD,KACE,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,eACA,kBAAC,YAAD,gBACA,kBAAC,YAAD,gBACA,kBAAC,YAAD,iBACA,kBAAC,YAAD,kBAGJ,kBAAC,YAAD,KACGE,EAAQiB,KAAI,SAACC,EAAQC,GAAT,OACX,kBAAC,WAAD,CAAUC,IAAKD,EAAGE,UAAU,2DAC1B,kBAAC,YAAD,CAAWC,QAAS,WAAM3B,EAAQ4B,KAAK,gBAAkBL,EAAOM,MAC9D,6BACE,uBAAGH,UAAU,iBAAiBH,EAAOO,UAAY,IAAMP,EAAOQ,UAC9D,uBAAGL,UAAU,4CAA4CH,EAAOS,OAGpE,kBAAC,YAAD,CAAWL,QAAS,WAAM3B,EAAQ4B,KAAK,gBAAkBL,EAAOM,MAC9D,0BAAMH,UAAU,WAAWH,EAAOU,eAEpC,kBAAC,YAAD,CAAWN,QAAS,WAAM3B,EAAQ4B,KAAK,gBAAkBL,EAAOM,MAC9D,0BAAMH,UAAU,WAAWH,EAAOW,cAEpC,kBAAC,YAAD,CAAWP,QAAS,WAAM3B,EAAQ4B,KAAK,gBAAkBL,EAAOM,MAC9D,0BAAMH,UAAU,WAAWH,EAAOY,WAEpC,kBAAC,YAAD,KACE,yBAAKT,UAAU,+BACb,kBAAC,SAAD,CAAQU,IAAKC,IAAMC,GAAI,WAAaf,EAAOM,GAAIU,OAAO,OAAOC,KAAK,OAAOC,aAAW,QAClF,kBAAC,UAAD,CAASf,UAAU,UAAUgB,cAAY,kBAcvD,kBAAC,cAAD,KACE,kBAAC,aAAD,CACEnC,aAAcA,EACdoC,eA1Ea,GA2EbC,MAAM,mBACNC,SAzEV,SAAsBC,GACpB1C,EAAQ0C,W,gCC5BZ,oBAQeC,IANf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OACE,wBAAItB,UAAU,gEAAgEsB","file":"static/js/15.72de1e26.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\n\nimport { EditIcon, EyeIcon, TrashIcon } from '../icons'\nimport PageTitle from '../components/Typography/PageTitle'\nimport {\n  TableBody,\n  TableContainer,\n  Table,\n  TableHeader,\n  TableCell,\n  TableRow,\n  TableFooter,\n  Button,\n  Pagination,\n} from '@windmill/react-ui'\n\nfunction Players() {\n  let history = useHistory();\n  const [page, setPage] = useState(1)\n  const [players, setPlayers] = useState([])\n  const [totalResults, setTotalResults] = useState(0)\n\n  // pagination setup\n  const resultsPerPage = 10\n\n  // pagination change control\n  function onPageChange(p) {\n    setPage(p)\n  }\n\n  // on page change, load new sliced players\n  // here you would make another server request for new players\n  useEffect(() => {\n    fetch(process.env.REACT_APP_BACKEND_URL + '/api/player')\n      .then((response) => response.json())\n      .then((players) => {\n        setTotalResults(players.length)\n        setPlayers(players.slice((page - 1) * resultsPerPage, page * resultsPerPage))\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  }, [page])\n\n  return (\n    <>\n      <PageTitle>Players</PageTitle>\n\n      <TableContainer>\n        <Table>\n          <TableHeader>\n            <tr>\n              <TableCell>Player</TableCell>\n              <TableCell>Attempt</TableCell>\n              <TableCell>Success</TableCell>\n              <TableCell>Position</TableCell>\n              <TableCell>Actions</TableCell>\n            </tr>\n          </TableHeader>\n          <TableBody>\n            {players.map((player, i) => (\n              <TableRow key={i} className=\"cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-900\">\n                <TableCell onClick={()=> {history.push('/app/profile/' + player.id)}} >\n                  <div>\n                    <p className=\"font-semibold\">{player.firstname + \" \" + player.lastname}</p>\n                    <p className=\"text-xs text-gray-600 dark:text-gray-400\">{player.job}</p>\n                  </div>\n                </TableCell>\n                <TableCell onClick={()=> {history.push('/app/profile/' + player.id)}}>\n                  <span className=\"text-sm\">{player.two_attempts}</span>\n                </TableCell>\n                <TableCell onClick={()=> {history.push('/app/profile/' + player.id)}}>\n                  <span className=\"text-sm\">{player.two_success}</span>\n                </TableCell>\n                <TableCell onClick={()=> {history.push('/app/profile/' + player.id)}}>\n                  <span className=\"text-sm\">{player.position}</span>\n                </TableCell>\n                <TableCell>\n                  <div className=\"flex items-center space-x-4\">\n                    <Button tag={Link} to={\"profile/\" + player.id} layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                      <EyeIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    </Button>\n                    {/* <Button layout=\"link\" size=\"icon\" aria-label=\"Edit\">\n                      <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    </Button>\n                    <Button layout=\"link\" size=\"icon\" aria-label=\"Delete\">\n                      <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n                    </Button> */}\n                  </div>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <TableFooter>\n          <Pagination\n            totalResults={totalResults}\n            resultsPerPage={resultsPerPage}\n            label=\"Table navigation\"\n            onChange={onPageChange}\n          />\n        </TableFooter>\n      </TableContainer>\n\n    </>\n  )\n}\n\nexport default Players\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n"],"sourceRoot":""}